
<div id="divSWFUploadMessage">
  {swfupload_usage}
</div>
<div id="divSWFUploadAlbumSelect">
  <form method="post" name="form_album" action=""><div>
    <span style="font-weight:bold;">{lang_destination}:</span> {album_select}
  </div></form>
</div>
<div id="divSWFUploadAllowedTypes">
  {swfupload_allowed_types}<span id="swfu_file_types">{swfupload_file_types}</span>
</div>
<div id="divSWFUploadSizeLimit">
  {swfupload_file_size_limit}<span id="swfu_size_limit">{swfupload_size_limit}</span>
</div>

<div id="swfupload-form">
  <form id="form1" action="admin.php" method="post" enctype="multipart/form-data">
    <div id="divSWFUploadUI">
      <div class="fieldset  flash" id="fsUploadProgress">
      <span class="legend">{swfupload_queue}</span>
      </div>
      <div id="divSWFUploadStatus">
        <span id="divSWFUploadStatusFiles">0 {sfwupload_files} {swfupload_uploaded}</span>
      </div>
      <div id="divSWFUploadButtons">
        <span id="spanButtonPlaceholder"></span>
        <input id="btnCancel" type="button" value="{swfupload_cancel_all}" disabled="disabled" style="margin-left: 2px; height: 22px; font-size: 9pt; border-width: 1px; margin-bottom: 10px; padding: 2px 3px; vertical-align: top;"{xhtml}>
        <br{xhtml}>
      </div>
    </div>
    <noscript><div class="SWFUcontent">{swfupload_noscript}</div></noscript>
    <div id="divLoadingContent" class="SWFUcontent" style="display: none;">{swfupload_is_loading}</div>
    <div id="divLongLoading" class="SWFUcontent" style="display: none;">{swfupload_not_loading}</div>
    <div id="divAlternateContent" class="SWFUcontent" style="display: none;">{swfupload_didnt_load}</div>
  </form>

  <div id="divSWFThumbnails">
    <form name="captions" method="post" action="{site_url}/mediagallery/admin.php?album_id=0">
      <div id="thumbnails" style="vertical-align:middle;"></div>
      <div style="clear:both;">
      <input type="hidden" name="action" value="batchcaptionsave"{xhtml}>
      <input type="submit" name="mode"   value="{save_exit}"{xhtml}>
      </div>
    </form>
  </div>
</div>
<hr{xhtml}>
<div style="text-align:right;">{jumpbox}</div>
<script type="text/javascript" src="{site_url}/mediagallery/swfupload/swfupload.js"></script>
<script type="text/javascript" src="{site_url}/mediagallery/swfupload/swfupload.swfobject.js"></script>
<script type="text/javascript" src="{site_url}/mediagallery/swfupload/swfupload.queue.js"></script>
<script type="text/javascript" src="{site_url}/mediagallery/swfupload/fileprogress.js"></script>
<script type="text/javascript" src="{site_url}/mediagallery/swfupload/handlers.js"></script>
<script type="text/javascript">
/* this is where all of the exciting things happen */
var swfu;
SWFUpload.onload = function () {
    var settings = {
        flash_url : "{flash_url}",
        upload_url: "{upload_url}",
        post_params: {
            "uid" : "{user_id}",
            "sid" : "{user_token}",
            "aid" : "{album_id}"
        },
        file_types : "{swfupload_file_types}",
        file_types_description : "{swfupload_types_desc}",
        file_size_limit : "{swfupload_size_limit}",
        file_upload_limit : 100,
        file_queue_limit : 0,
        custom_settings : {
            progressTarget : "fsUploadProgress",
            cancelButtonId : "btnCancel"
        },
        debug: false,

        // Button Settings
        button_image_url : "swfupload/images/SWFUploadButton.png",
        button_placeholder_id : "spanButtonPlaceholder",
        button_width: 61,
        button_height: 22,

        // The event handler functions are defined in handlers.js
        swfupload_loaded_handler : swfUploadLoaded,
        file_queued_handler : fileQueued,
        file_queue_error_handler : fileQueueError,
        file_dialog_complete_handler : fileDialogComplete,
        upload_start_handler : uploadStart,
        upload_progress_handler : uploadProgress,
        upload_error_handler : uploadError,
        upload_success_handler : uploadSuccess,
        upload_complete_handler : uploadComplete,
        queue_complete_handler : queueComplete, // Queue plugin event

        // SWFObject settings
        minimum_flash_version : "9.0.28",
        swfupload_pre_load_handler : swfUploadPreLoad,
        swfupload_load_failed_handler : swfUploadLoadFailed
    };

    swfu = new SWFUpload(settings);

    // set the user_id, user_token, dest_album & allowed_file_types
    onAlbumChange();
}

function onAlbumChange() {
  var aid_index = document.form_album.album_id.selectedIndex;
  var aid = document.form_album.album_id.value;
  var uid = "{user_id}";
  var sid = "{user_token}";
  var file_types = "{swfupload_file_types}";
  var file_types_desc = "{swfupload_types_desc}";
  var file_types_span = document.getElementById("swfu_file_types");
  var size_limit_span = document.getElementById("swfu_size_limit");
  var size_limit = "{swfupload_size_limit}";
  var post_params = { "uid" : uid, "sid" : sid, "aid": aid };
  var url = "{site_url}/mediagallery/album_rpc.php";
  var query = "aid=" + aid;
  var js_lib = "{js_lib}";

  if (aid_index >= 0) {

    /* retrieve the parameters that change on a per-album basis */

    if (js_lib == "jquery") {

      /* this is the jquery method */
      $.ajax({
        url: "{site_url}/mediagallery/album_rpc.php?aid={album_id}",
        async: true,
        cache: false,
        dataType: "text",
        success: function(rtext) {
          var responsetext = rtext;
          var response = responsetext.split( "%" );
          size_limit_display = (response[0] / 1024 ) / 1024 + " M";
          size_limit = response[0];
          file_types = response[1];
          swfu.setPostParams( post_params );
          file_types_span.innerHTML = file_types;
          swfu.setFileTypes( file_types, file_types_desc );
          size_limit_span.innerHTML = size_limit_display;
          swfu.setFileSizeLimit( size_limit );
        }
      });

    } else {

      /* this is the mootools 1.1 XHR method */
      var myXHR = new XHR( {
        onSuccess: function() {
          var responsetext = myXHR.response.text;
          var response = responsetext.split( "%" );
          size_limit_display = (response[0] / 1024 ) / 1024 + " M";
          size_limit = response[0];
          file_types = response[1];
          swfu.setPostParams( post_params );
          file_types_span.innerHTML = file_types;
          swfu.setFileTypes( file_types, file_types_desc );
          size_limit_span.innerHTML = size_limit_display;
          swfu.setFileSizeLimit( size_limit );
        }
      }).send( url, query );
    }
  }
  return;
}

var lang = new Array();
lang["site_url"] = "{site_url}";
lang["title"] = "{title}";
lang["description"] = "{description}";
lang["xhtml"] = "{xhtml}";
lang["swfupload_pending"] = "{swfupload_pending}";
lang["swfupload_err_filesize"] = "{swfupload_err_filesize}";
lang["swfupload_err_zerosize"] = "{swfupload_err_zerosize}";
lang["swfupload_err_filetype"] = "{swfupload_err_filetype}";
lang["swfupload_err_general"] = "{swfupload_err_general}";
lang["swfupload_uploading"] = "{swfupload_uploading}";
lang["swfupload_complete"] = "{swfupload_complete}";
lang["swfupload_error"] = "{swfupload_error}";
lang["swfupload_failed"] = "{swfupload_failed}";
lang["swfupload_io_error"] = "{swfupload_io_error}";
lang["swfupload_sec_error"] = "{swfupload_sec_error}";
lang["swfupload_limit_exceeded"] = "{swfupload_limit_exceeded}";
lang["swfupload_fail_validation"] = "{swfupload_fail_validation}";
lang["swfupload_cancelled"] = "{swfupload_cancelled}";
lang["swfupload_stopped"] = "{swfupload_stopped}";
lang["swfupload_unhandled"] = "{swfupload_unhandled}";
lang["swfupload_file"] = "{swfupload_file}";
lang["swfupload_files"] = "{swfupload_files}";
lang["swfupload_uploaded"] = "{swfupload_uploaded}";
</script>
